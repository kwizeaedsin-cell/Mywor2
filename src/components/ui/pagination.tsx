import React from 'react';export interface PaginationProps {  currentPage: number;  totalItems: number;  pageSize: number;  onPageChange: (page: number) => void;}const getPageNumbers = (current: number, total: number) => {  const pages: (number | string)[] = [];  if (total <= 7) {    for (let i = 1; i <= total; i++) pages.push(i);    return pages;  }  if (current <= 4) {    pages.push(1, 2, 3, 4, 5, '...', total);  } else if (current >= total - 3) {    pages.push(1, '...', total - 4, total - 3, total - 2, total - 1, total);  } else {    pages.push(1, '...', current - 1, current, current + 1, '...', total);  }  return pages;};export const Pagination: React.FC<PaginationProps> = ({ currentPage, totalItems, pageSize, onPageChange }) => {  const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));  const pageNumbers = getPageNumbers(currentPage, totalPages);  return (    <nav className="flex items-center justify-center gap-2 mt-4">      <button        className="px-3 py-1 rounded bg-gray-200 hover:bg-gray-300 disabled:opacity-50"        disabled={currentPage === 1}        onClick={() => onPageChange(currentPage - 1)}      >        Previous      </button>      {pageNumbers.map((num, idx) =>        typeof num === 'number' ? (          <button            key={num}            className={`px-3 py-1 rounded ${num === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-200 hover:bg-gray-300'} transition disabled:opacity-50`}            disabled={num === currentPage}            onClick={() => onPageChange(num)}          >            {num}          </button>        ) : (          <span key={idx} className="px-2 text-gray-500">{num}</span>        )      )}      <button        className="px-3 py-1 rounded bg-gray-200 hover:bg-gray-300 disabled:opacity-50"        disabled={currentPage === totalPages}        onClick={() => onPageChange(currentPage + 1)}      >        Next      </button>    </nav>  );};export default Pagination;